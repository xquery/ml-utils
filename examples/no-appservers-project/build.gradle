plugins {
  id "com.marklogic.ml-gradle" version "2.4.0"
}

ext {
	/**
	 * ml-gradle's Gradle plugin class - MarkLogicPlugin - populates the mlAppDeployer instance with a set of
	 * commands. You are free to manipulate the list of commands as you see it. This is an example of removing
	 * the command for deploying a REST API server, which will result in mlDeploy not creating a REST API server
	 * by default.
	 */
	mlAppDeployer.getCommands().remove(mlAppDeployer.getCommand("DeployRestApiServersCommand"))

	/**
	 * If you don't want a default REST API server, odds are you don't want the other thing that mlDeploy will create
	 * by default, which is a triggers database. There's not yet a Gradle property for this, so we have to manipulate the
	 * mlAppConfig instance directly.
	 */
	mlAppConfig {
		createTriggersDatabase = false
	}
}
